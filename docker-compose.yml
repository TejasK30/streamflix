services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped    
    ports:
      - "6379:6379"

    volumes:
      - redis-data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      restart: unless-stopped    
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - PORT=5000
    volumes:
      - video_storage:/app/videos
      - upload_temp:/app/uploads
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ./backend
      dockerfile: worker.Dockerfile
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - API_URL=http://backend:5000
    volumes:
      - video_storage:/app/videos
      - upload_temp:/app/uploads
    depends_on:
      - redis
      - backend
    deploy:
      replicas: 2  

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:3000
    depends_on:
      - backend


  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - video_storage:/var/www/videos:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend

volumes:
  redis_data:
  video_storage:
  upload_temp:
