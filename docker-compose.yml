services:

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: streamflix
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/streamflix
    volumes:
      - video_storage:/app/videos
      - upload_temp:/app/uploads
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  worker:
    build:
      context: ./backend
      dockerfile: worker.Dockerfile
    environment:
      - NODE_ENV=production
      - REDIS_URL=redis://redis:6379
      - API_URL=http://backend:5000
    volumes:
      - video_storage:/app/videos
      - upload_temp:/app/uploads
    depends_on:
      - redis
      - backend
    deploy:
      replicas: 2

volumes:
  pg_data:
  redis_data:
  video_storage:
  upload_temp:
